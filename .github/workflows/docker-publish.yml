name: CI - Build, Test & Publish

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
    
    - name: Build Docker image
      run: |
        cd deploy
        docker-compose build
    
    - name: Start application
      run: |
        cd deploy
        docker-compose up -d
        sleep 30  # Wait for application to be ready
    
    - name: Install test dependencies
      run: |
        cd test
        pip install -r requirements.txt
    
    - name: Run security tests
      run: |
        cd test
        pytest test_app.py -v --tb=short
    
    - name: Run automated exploit
      run: |
        cd test
        python solve.py
    
    - name: Check application logs
      if: failure()
      run: |
        cd deploy
        docker-compose logs
    
    - name: Cleanup
      if: always()
      run: |
        cd deploy
        docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  docker-publish:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deploy/Dockerfile
        push: true
        tags: |
          techcorp/inventory-system:latest
          techcorp/inventory-system:${{ github.sha }}
        platforms: linux/amd64,linux/arm64
